digraph hierarchy {

node [fontname=Helvetica]
edge [style=dashed]

doc_0 [label="doc - 269"]


doc_0 -> { section_1}
{rank=same; section_1}

section_1 [label="section: 1-239"]


section_1 -> { header_2 prose_3 prose_4 codeblock_5 prose_6 prose_7 section_8 section_9 section_10 section_11 section_12 section_13 section_14}
{rank=same; header_2 prose_3 prose_4 codeblock_5 prose_6 prose_7 section_8 section_9 section_10 section_11 section_12 section_13 section_14}

header_2 [label="1 : Codex format"]

prose_3 [label="prose"]

prose_4 [label="prose"]

codeblock_5 [label="code block 10-18"]

prose_6 [label="prose"]

prose_7 [label="prose"]

section_8 [label="section: 24-32"]

section_9 [label="section: 33-59"]

section_10 [label="section: 60-88"]

section_11 [label="section: 164-176"]

section_12 [label="section: 177-183"]

section_13 [label="section: 184-220"]

section_14 [label="section: 240-255"]


header_2 -> leaf_15
leaf_15  [color=Gray,shape=rectangle,fontname=Inconsolata,label="* Codex format"]
prose_3 -> { raw_16}
{rank=same; raw_16}

raw_16 [label="raw"]


raw_16 -> leaf_17
leaf_17  [color=Gray,shape=rectangle,fontname=Inconsolata,label="


  The codex format is how bridge expects to find a useful ingenium to be
organized. 
"]
prose_4 -> { raw_18}
{rank=same; raw_18}

raw_18 [label="raw"]


raw_18 -> leaf_19
leaf_19  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The structure is [deliberately simple](#assert-is-codex).  Let us say we are
writing an ingenium called Genesis.  We might have a structure like so:
"]
codeblock_5 -> leaf_20
leaf_20  [color=Gray,shape=rectangle,fontname=Inconsolata,label="- /genesis
  - /orb
  - /src
  - /doc
  - /lib
  - /etc  
  - genesis"]
prose_6 -> { raw_21}
{rank=same; raw_21}

raw_21 [label="raw"]


raw_21 -> leaf_22
leaf_22  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
We see that we have a directory, five subsidiaries, and an eponymous file.
"]
prose_7 -> { raw_23}
{rank=same; raw_23}

raw_23 [label="raw"]


raw_23 -> leaf_24
leaf_24  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
So far so good. 
"]
section_8 -> { header_25 prose_26 prose_27 prose_28}
{rank=same; header_25 prose_26 prose_27 prose_28}

header_25 [label="2 : orb"]

prose_26 [label="prose"]

prose_27 [label="prose"]

prose_28 [label="prose"]


header_25 -> leaf_29
leaf_29  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** orb"]
prose_26 -> { raw_30 literal_31 raw_32}
{rank=same; raw_30 literal_31 raw_32}

raw_30 [label="raw"]

literal_31 [label="literal"]

raw_32 [label="raw"]


raw_30 -> leaf_33
leaf_33  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  The "]
literal_31 -> leaf_34
leaf_34  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_32 -> leaf_35
leaf_35  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory is the source of all truth. It contains Grimoires.
"]
prose_27 -> { raw_36 literal_37 raw_38 literal_39 raw_40}
{rank=same; raw_36 literal_37 raw_38 literal_39 raw_40}

raw_36 [label="raw"]

literal_37 [label="literal"]

raw_38 [label="raw"]

literal_39 [label="literal"]

raw_40 [label="raw"]


raw_36 -> leaf_41
leaf_41  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
These are woven and knitted into "]
literal_37 -> leaf_42
leaf_42  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/doc"]
raw_38 -> leaf_43
leaf_43  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and "]
literal_39 -> leaf_44
leaf_44  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_40 -> leaf_45
leaf_45  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", respectively.
"]
prose_28 -> { raw_46 literal_47 raw_48}
{rank=same; raw_46 literal_47 raw_48}

raw_46 [label="raw"]

literal_47 [label="literal"]

raw_48 [label="raw"]


raw_46 -> leaf_49
leaf_49  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It is allowable for the "]
literal_47 -> leaf_50
leaf_50  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_48 -> leaf_51
leaf_51  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory to be empty. 

"]
section_9 -> { header_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58}
{rank=same; header_52 prose_53 prose_54 prose_55 prose_56 prose_57 prose_58}

header_52 [label="2 : src"]

prose_53 [label="prose"]

prose_54 [label="prose"]

prose_55 [label="prose"]

prose_56 [label="prose"]

prose_57 [label="prose"]

prose_58 [label="prose"]


header_52 -> leaf_59
leaf_59  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** src"]
prose_53 -> { raw_60 literal_61 raw_62 literal_63 raw_64}
{rank=same; raw_60 literal_61 raw_62 literal_63 raw_64}

raw_60 [label="raw"]

literal_61 [label="literal"]

raw_62 [label="raw"]

literal_63 [label="literal"]

raw_64 [label="raw"]


raw_60 -> leaf_65
leaf_65  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
literal_61 -> leaf_66
leaf_66  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_62 -> leaf_67
leaf_67  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is short for sorcery.  The source is in "]
literal_63 -> leaf_68
leaf_68  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_64 -> leaf_69
leaf_69  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".  We call the source to
sorcery transition a knit. 
"]
prose_54 -> { raw_70 literal_71 raw_72}
{rank=same; raw_70 literal_71 raw_72}

raw_70 [label="raw"]

literal_71 [label="literal"]

raw_72 [label="raw"]


raw_70 -> leaf_73
leaf_73  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
  The important thing to know about the "]
literal_71 -> leaf_74
leaf_74  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_72 -> leaf_75
leaf_75  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory, is that Genesis 
considers it the home directory at runtime. 
"]
prose_55 -> { raw_76 literal_77 raw_78 literal_79 raw_80}
{rank=same; raw_76 literal_77 raw_78 literal_79 raw_80}

raw_76 [label="raw"]

literal_77 [label="literal"]

raw_78 [label="raw"]

literal_79 [label="literal"]

raw_80 [label="raw"]


raw_76 -> leaf_81
leaf_81  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
It's where the code to run is kept, in whatever arrangement is useful to
the runtime, once it has been knitted out of the "]
literal_77 -> leaf_82
leaf_82  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_78 -> leaf_83
leaf_83  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory by "]
literal_79 -> leaf_84
leaf_84  [color=Gray,shape=rectangle,fontname=Inconsolata,label="grym"]
raw_80 -> leaf_85
leaf_85  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
prose_56 -> { raw_86 literal_87 raw_88 literal_89 raw_90 italic_91 raw_92}
{rank=same; raw_86 literal_87 raw_88 literal_89 raw_90 italic_91 raw_92}

raw_86 [label="raw"]

literal_87 [label="literal"]

raw_88 [label="raw"]

literal_89 [label="literal"]

raw_90 [label="raw"]

italic_91 [label="italic"]

raw_92 [label="raw"]


raw_86 -> leaf_93
leaf_93  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Codices tend to be like libraries or like programs.  For a program, the 
format is "]
literal_87 -> leaf_94
leaf_94  [color=Gray,shape=rectangle,fontname=Inconsolata,label="name/name"]
raw_88 -> leaf_95
leaf_95  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", for a library, an alternative is "]
literal_89 -> leaf_96
leaf_96  [color=Gray,shape=rectangle,fontname=Inconsolata,label="name/src/name/"]
raw_90 -> leaf_97
leaf_97  [color=Gray,shape=rectangle,fontname=Inconsolata,label=",
and"]
italic_91 -> leaf_98
leaf_98  [color=Gray,shape=rectangle,fontname=Inconsolata,label="or =name"]
raw_92 -> leaf_99
leaf_99  [color=Gray,shape=rectangle,fontname=Inconsolata,label="src/name.ext=.  This is handy for codicies which happen to be
both.
"]
prose_57 -> { raw_100 literal_101 raw_102 literal_103 raw_104}
{rank=same; raw_100 literal_101 raw_102 literal_103 raw_104}

raw_100 [label="raw"]

literal_101 [label="literal"]

raw_102 [label="raw"]

literal_103 [label="literal"]

raw_104 [label="raw"]


raw_100 -> leaf_105
leaf_105  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
In order to support the delicate operation of wrapping existing codebases
into codex format, "]
literal_101 -> leaf_106
leaf_106  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_102 -> leaf_107
leaf_107  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" can be the only source of truth. In this case
the "]
literal_103 -> leaf_108
leaf_108  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_104 -> leaf_109
leaf_109  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory will either be empty, or contain only dotfiles. 
"]
prose_58 -> { raw_110 literal_111 raw_112 bold_113 raw_114 literal_115 raw_116 literal_117 raw_118}
{rank=same; raw_110 literal_111 raw_112 bold_113 raw_114 literal_115 raw_116 literal_117 raw_118}

raw_110 [label="raw"]

literal_111 [label="literal"]

raw_112 [label="raw"]

bold_113 [label="bold"]

raw_114 [label="raw"]

literal_115 [label="literal"]

raw_116 [label="raw"]

literal_117 [label="literal"]

raw_118 [label="raw"]


raw_110 -> leaf_119
leaf_119  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
A corrolary of this is that "]
literal_111 -> leaf_120
leaf_120  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_112 -> leaf_121
leaf_121  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", discussed below, does not have
to follow the format described here.  It "]
bold_113 -> leaf_122
leaf_122  [color=Gray,shape=rectangle,fontname=Inconsolata,label="should"]
raw_114 -> leaf_123
leaf_123  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", mind you.  Using "]
literal_115 -> leaf_124
leaf_124  [color=Gray,shape=rectangle,fontname=Inconsolata,label="grym"]
raw_116 -> leaf_125
leaf_125  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
to provide a shallow wrapper around the format is not recondite unless your
tooling is allergic to symlinks; "]
literal_117 -> leaf_126
leaf_126  [color=Gray,shape=rectangle,fontname=Inconsolata,label="grym invert"]
raw_118 -> leaf_127
leaf_127  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is intended to be developed
enough to sort these issues out before alpha release.

"]
section_10 -> { header_128 prose_129 prose_130 prose_131 prose_132 prose_133 prose_134 section_135}
{rank=same; header_128 prose_129 prose_130 prose_131 prose_132 prose_133 prose_134 section_135}

header_128 [label="2 : lib"]

prose_129 [label="prose"]

prose_130 [label="prose"]

prose_131 [label="prose"]

prose_132 [label="prose"]

prose_133 [label="prose"]

prose_134 [label="prose"]

section_135 [label="section: 89-163"]


header_128 -> leaf_136
leaf_136  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** lib"]
prose_129 -> { raw_137 literal_138 raw_139 literal_140 raw_141 literal_142 raw_143 literal_144 raw_145}
{rank=same; raw_137 literal_138 raw_139 literal_140 raw_141 literal_142 raw_143 literal_144 raw_145}

raw_137 [label="raw"]

literal_138 [label="literal"]

raw_139 [label="raw"]

literal_140 [label="literal"]

raw_141 [label="raw"]

literal_142 [label="literal"]

raw_143 [label="raw"]

literal_144 [label="literal"]

raw_145 [label="raw"]


raw_137 -> leaf_146
leaf_146  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  All dependencies for "]
literal_138 -> leaf_147
leaf_147  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_139 -> leaf_148
leaf_148  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" are to be found at "]
literal_140 -> leaf_149
leaf_149  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib/"]
raw_141 -> leaf_150
leaf_150  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", a symlink to"]
literal_142 -> leaf_151
leaf_151  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_143 -> leaf_152
leaf_152  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".  This is a subtlety.  "]
literal_144 -> leaf_153
leaf_153  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_145 -> leaf_154
leaf_154  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" itself has one directory per dependency,
which in a normal bridge install will themselves be symlinks. 
"]
prose_130 -> { raw_155 italic_156 raw_157 literal_158 raw_159}
{rank=same; raw_155 italic_156 raw_157 literal_158 raw_159}

raw_155 [label="raw"]

italic_156 [label="italic"]

raw_157 [label="raw"]

literal_158 [label="literal"]

raw_159 [label="raw"]


raw_155 -> leaf_160
leaf_160  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
One reason is that \"src"]
italic_156 -> leaf_161
leaf_161  [color=Gray,shape=rectangle,fontname=Inconsolata,label="lib\" is a simple literal string, while \".."]
raw_157 -> leaf_162
leaf_162  [color=Gray,shape=rectangle,fontname=Inconsolata,label="lib\" is a
description, with a verb, "]
literal_158 -> leaf_163
leaf_163  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".."]
raw_159 -> leaf_164
leaf_164  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", that is appreciably harder to reason about. 
"]
prose_131 -> { raw_165 literal_166 raw_167}
{rank=same; raw_165 literal_166 raw_167}

raw_165 [label="raw"]

literal_166 [label="literal"]

raw_167 [label="raw"]


raw_165 -> leaf_168
leaf_168  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Another is that it's a brown M & M. One way to make sure you don't make poor
assumptions about filesystems being literal is to make a mandatory symlink part
of the description format for programs.  It gives "]
literal_166 -> leaf_169
leaf_169  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge"]
raw_167 -> leaf_170
leaf_170  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" tools something to
look for, when deciding what to do.
"]
prose_132 -> { raw_171 literal_172 raw_173 literal_174 raw_175 literal_176 raw_177 literal_178 raw_179 literal_180 raw_181 literal_182 raw_183}
{rank=same; raw_171 literal_172 raw_173 literal_174 raw_175 literal_176 raw_177 literal_178 raw_179 literal_180 raw_181 literal_182 raw_183}

raw_171 [label="raw"]

literal_172 [label="literal"]

raw_173 [label="raw"]

literal_174 [label="literal"]

raw_175 [label="raw"]

literal_176 [label="literal"]

raw_177 [label="raw"]

literal_178 [label="literal"]

raw_179 [label="raw"]

literal_180 [label="literal"]

raw_181 [label="raw"]

literal_182 [label="literal"]

raw_183 [label="raw"]


raw_171 -> leaf_184
leaf_184  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
In the end, I want "]
literal_172 -> leaf_185
leaf_185  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_173 -> leaf_186
leaf_186  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and "]
literal_174 -> leaf_187
leaf_187  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_175 -> leaf_188
leaf_188  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", and I want them to be identical, so
that's how it is. Since "]
literal_176 -> leaf_189
leaf_189  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_177 -> leaf_190
leaf_190  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is the base directory from the code's 
perspective, "]
literal_178 -> leaf_191
leaf_191  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_179 -> leaf_192
leaf_192  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" gives you the dependencies directly, and keeps the "]
literal_180 -> leaf_193
leaf_193  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_181 -> leaf_194
leaf_194  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
and "]
literal_182 -> leaf_195
leaf_195  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/doc"]
raw_183 -> leaf_196
leaf_196  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" out of the way; not hidden, just that a normal program won't refer
to them or affect them.
"]
prose_133 -> { raw_197 literal_198 raw_199 literal_200 raw_201 literal_202 raw_203}
{rank=same; raw_197 literal_198 raw_199 literal_200 raw_201 literal_202 raw_203}

raw_197 [label="raw"]

literal_198 [label="literal"]

raw_199 [label="raw"]

literal_200 [label="literal"]

raw_201 [label="raw"]

literal_202 [label="literal"]

raw_203 [label="raw"]


raw_197 -> leaf_204
leaf_204  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Quirks are useful.  There's not much bandwidth in a filesystem with which to 
signal. A directory called "]
literal_198 -> leaf_205
leaf_205  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_199 -> leaf_206
leaf_206  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" under "]
literal_200 -> leaf_207
leaf_207  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_201 -> leaf_208
leaf_208  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" could be anything, if it
resolves to the same absolute path as "]
literal_202 -> leaf_209
leaf_209  [color=Gray,shape=rectangle,fontname=Inconsolata,label="../lib"]
raw_203 -> leaf_210
leaf_210  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", the likelihood we're dealing
with a codex goes up. 
"]
prose_134 -> { raw_211}
{rank=same; raw_211}

raw_211 [label="raw"]


raw_211 -> leaf_212
leaf_212  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Important note: Codices can include circular dependencies, please do not 
naively search them depth-first. 

"]
section_135 -> { header_213 prose_214 codeblock_215 prose_216 codeblock_217 prose_218 codeblock_219 prose_220 prose_221 prose_222 prose_223 codeblock_224 prose_225 prose_226}
{rank=same; header_213 prose_214 codeblock_215 prose_216 codeblock_217 prose_218 codeblock_219 prose_220 prose_221 prose_222 prose_223 codeblock_224 prose_225 prose_226}

header_213 [label="3 : A further subtlety of /lib"]

prose_214 [label="prose"]

codeblock_215 [label="code block 94-103"]

prose_216 [label="prose"]

codeblock_217 [label="code block 108-110"]

prose_218 [label="prose"]

codeblock_219 [label="code block 114-127"]

prose_220 [label="prose"]

prose_221 [label="prose"]

prose_222 [label="prose"]

prose_223 [label="prose"]

codeblock_224 [label="code block 141-152"]

prose_225 [label="prose"]

prose_226 [label="prose"]


header_213 -> leaf_227
leaf_227  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** A further subtlety of /lib"]
prose_214 -> { raw_228 literal_229 raw_230}
{rank=same; raw_228 literal_229 raw_230}

raw_228 [label="raw"]

literal_229 [label="literal"]

raw_230 [label="raw"]


raw_228 -> leaf_231
leaf_231  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

Let us say we have a library, also in a codex, which is called "]
literal_229 -> leaf_232
leaf_232  [color=Gray,shape=rectangle,fontname=Inconsolata,label="numbers"]
raw_230 -> leaf_233
leaf_233  [color=Gray,shape=rectangle,fontname=Inconsolata,label=". It
would have a format such as this:
"]
codeblock_215 -> leaf_234
leaf_234  [color=Gray,shape=rectangle,fontname=Inconsolata,label="- /numbers
  - /orb
  - /src
    - numbers.ext
  - /doc
  - /lib
  - /etc
  - numbers"]
prose_216 -> { raw_235 literal_236 raw_237 literal_238 raw_239}
{rank=same; raw_235 literal_236 raw_237 literal_238 raw_239}

raw_235 [label="raw"]

literal_236 [label="literal"]

raw_237 [label="raw"]

literal_238 [label="literal"]

raw_239 [label="raw"]


raw_235 -> leaf_240
leaf_240  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
In order to provide this as a library to "]
literal_236 -> leaf_241
leaf_241  [color=Gray,shape=rectangle,fontname=Inconsolata,label="genesis"]
raw_237 -> leaf_242
leaf_242  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", we create a symlink in
this fashion, presuming that "]
literal_238 -> leaf_243
leaf_243  [color=Gray,shape=rectangle,fontname=Inconsolata,label="."]
raw_239 -> leaf_244
leaf_244  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" contains both directories:
"]
codeblock_217 -> leaf_245
leaf_245  [color=Gray,shape=rectangle,fontname=Inconsolata,label="ln -s ./numbers/src/ ./genesis/lib/numbers"]
prose_218 -> { raw_246}
{rank=same; raw_246}

raw_246 [label="raw"]


raw_246 -> leaf_247
leaf_247  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
With this result:
"]
codeblock_219 -> leaf_248
leaf_248  [color=Gray,shape=rectangle,fontname=Inconsolata,label="- /genesis
  - /orb
  - /src
    - /lib ↻
      - /numbers
        - numbers.ext
  - /doc
  - /lib
    - /numbers
      - numbers.ext
  - /etc
  - genesis"]
prose_220 -> { raw_249 literal_250 raw_251}
{rank=same; raw_249 literal_250 raw_251}

raw_249 [label="raw"]

literal_250 [label="literal"]

raw_251 [label="raw"]


raw_249 -> leaf_252
leaf_252  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
This allows "]
literal_250 -> leaf_253
leaf_253  [color=Gray,shape=rectangle,fontname=Inconsolata,label="require"]
raw_251 -> leaf_254
leaf_254  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and friends to refer simply to \"numbers\", or if this
is locally shadowed, \"lib/numbers\". 
"]
prose_221 -> { raw_255 literal_256 raw_257}
{rank=same; raw_255 literal_256 raw_257}

raw_255 [label="raw"]

literal_256 [label="literal"]

raw_257 [label="raw"]


raw_255 -> leaf_258
leaf_258  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Note that we intend to write a friendly tool, "]
literal_256 -> leaf_259
leaf_259  [color=Gray,shape=rectangle,fontname=Inconsolata,label="manifest"]
raw_257 -> leaf_260
leaf_260  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", which will automate,
or at least smooth out, this process. 
"]
prose_222 -> { raw_261 literal_262 raw_263}
{rank=same; raw_261 literal_262 raw_263}

raw_261 [label="raw"]

literal_262 [label="literal"]

raw_263 [label="raw"]


raw_261 -> leaf_264
leaf_264  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
For now, let's note some of the advantages of this approach.  One may readily
pin a library, provided some snapshot revision control system such as "]
literal_262 -> leaf_265
leaf_265  [color=Gray,shape=rectangle,fontname=Inconsolata,label="git"]
raw_263 -> leaf_266
leaf_266  [color=Gray,shape=rectangle,fontname=Inconsolata,label=",
by simply symlinking to the blob in question.
"]
prose_223 -> { raw_267 literal_268 raw_269}
{rank=same; raw_267 literal_268 raw_269}

raw_267 [label="raw"]

literal_268 [label="literal"]

raw_269 [label="raw"]


raw_267 -> leaf_270
leaf_270  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
In addition, "]
literal_268 -> leaf_271
leaf_271  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/genesis"]
raw_269 -> leaf_272
leaf_272  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" may be expanded thus:
"]
codeblock_224 -> leaf_273
leaf_273  [color=Gray,shape=rectangle,fontname=Inconsolata,label="- /genesis
  - /orb
  - /src
  - /doc
  - /lib
    - /numbers ↻
      - /lib ↻
      - numbers.ext
  - /etc
  - genesis"]
prose_225 -> { raw_274 literal_275 raw_276 literal_277 raw_278 literal_279 raw_280 literal_281 raw_282}
{rank=same; raw_274 literal_275 raw_276 literal_277 raw_278 literal_279 raw_280 literal_281 raw_282}

raw_274 [label="raw"]

literal_275 [label="literal"]

raw_276 [label="raw"]

literal_277 [label="literal"]

raw_278 [label="raw"]

literal_279 [label="literal"]

raw_280 [label="raw"]

literal_281 [label="literal"]

raw_282 [label="raw"]


raw_274 -> leaf_283
leaf_283  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
literal_275 -> leaf_284
leaf_284  [color=Gray,shape=rectangle,fontname=Inconsolata,label="./genesis/lib/numbers/lib"]
raw_276 -> leaf_285
leaf_285  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", followed, puts us in the actual directory"]
literal_277 -> leaf_286
leaf_286  [color=Gray,shape=rectangle,fontname=Inconsolata,label="./numbers/lib"]
raw_278 -> leaf_287
leaf_287  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".  The elision of "]
literal_279 -> leaf_288
leaf_288  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_280 -> leaf_289
leaf_289  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is thus fairly well-behaved in
practice.  If directories in "]
literal_281 -> leaf_290
leaf_290  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_282 -> leaf_291
leaf_291  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" are themselves in codex format this
may be readily checked and taken advantage of.
"]
prose_226 -> { raw_292 literal_293 raw_294 literal_295 raw_296}
{rank=same; raw_292 literal_293 raw_294 literal_295 raw_296}

raw_292 [label="raw"]

literal_293 [label="literal"]

raw_294 [label="raw"]

literal_295 [label="literal"]

raw_296 [label="raw"]


raw_292 -> leaf_297
leaf_297  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
There should be no assumption that directories under "]
literal_293 -> leaf_298
leaf_298  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_294 -> leaf_299
leaf_299  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" are symlinks,
nor, if they happen to be, that they are codex "]
literal_295 -> leaf_300
leaf_300  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_296 -> leaf_301
leaf_301  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directories under
their project name. 

"]
section_11 -> { header_302 prose_303 prose_304 prose_305}
{rank=same; header_302 prose_303 prose_304 prose_305}

header_302 [label="2 : doc"]

prose_303 [label="prose"]

prose_304 [label="prose"]

prose_305 [label="prose"]


header_302 -> leaf_306
leaf_306  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** doc"]
prose_303 -> { raw_307}
{rank=same; raw_307}

raw_307 [label="raw"]


raw_307 -> leaf_308
leaf_308  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  This contains the weave or weaves.  This is itself an opinionated use of HTML
and friends.  A back end responsible for assembling some web view can stick its
product anywhere it chooses; if it's in codex format, the documentation view of the source code will go here.
"]
prose_304 -> { raw_309 literal_310 raw_311 literal_312 raw_313 literal_314 raw_315 literal_316 raw_317}
{rank=same; raw_309 literal_310 raw_311 literal_312 raw_313 literal_314 raw_315 literal_316 raw_317}

raw_309 [label="raw"]

literal_310 [label="literal"]

raw_311 [label="raw"]

literal_312 [label="literal"]

raw_313 [label="raw"]

literal_314 [label="literal"]

raw_315 [label="raw"]

literal_316 [label="literal"]

raw_317 [label="raw"]


raw_309 -> leaf_318
leaf_318  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The subdirectories of "]
literal_310 -> leaf_319
leaf_319  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/doc"]
raw_311 -> leaf_320
leaf_320  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" have names like "]
literal_312 -> leaf_321
leaf_321  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/html"]
raw_313 -> leaf_322
leaf_322  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", "]
literal_314 -> leaf_323
leaf_323  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/md"]
raw_315 -> leaf_324
leaf_324  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", or "]
literal_316 -> leaf_325
leaf_325  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/pdf"]
raw_317 -> leaf_326
leaf_326  [color=Gray,shape=rectangle,fontname=Inconsolata,label=". These
are the main suffixes you would expect to find, to be sure, but refer to 
compilation targets rather than text formats per se. 
"]
prose_305 -> { raw_327 literal_328 raw_329}
{rank=same; raw_327 literal_328 raw_329}

raw_327 [label="raw"]

literal_328 [label="literal"]

raw_329 [label="raw"]


raw_327 -> leaf_330
leaf_330  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The root for an html weave of Genesis could be expected to be found at "]
literal_328 -> leaf_331
leaf_331  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/genesis/doc/html/genesis.html"]
raw_329 -> leaf_332
leaf_332  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", and so forth. 

"]
section_12 -> { header_333 prose_334}
{rank=same; header_333 prose_334}

header_333 [label="2 : etc"]

prose_334 [label="prose"]


header_333 -> leaf_335
leaf_335  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** etc"]
prose_334 -> { raw_336}
{rank=same; raw_336}

raw_336 [label="raw"]


raw_336 -> leaf_337
leaf_337  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  Is the first example of an optional codex directory.  It's always good to
have a junk drawer.  Think of it as a lightweight container for assets.  If
a codex just needs a few binaries of the non-executable variety, toss them in
here.
"]
section_13 -> { header_338 prose_339 prose_340 prose_341 structure_342 section_343}
{rank=same; header_338 prose_339 prose_340 prose_341 structure_342 section_343}

header_338 [label="2 : out"]

prose_339 [label="prose"]

prose_340 [label="prose"]

prose_341 [label="prose"]

structure_342 [label="structure"]

section_343 [label="section: 221-239"]


header_338 -> leaf_344
leaf_344  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** out"]
prose_339 -> { raw_345 literal_346 raw_347 literal_348 raw_349 literal_350 raw_351}
{rank=same; raw_345 literal_346 raw_347 literal_348 raw_349 literal_350 raw_351}

raw_345 [label="raw"]

literal_346 [label="literal"]

raw_347 [label="raw"]

literal_348 [label="literal"]

raw_349 [label="raw"]

literal_350 [label="literal"]

raw_351 [label="raw"]


raw_345 -> leaf_352
leaf_352  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  "]
literal_346 -> leaf_353
leaf_353  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/out"]
raw_347 -> leaf_354
leaf_354  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is likely enough to recur to deserve its own section.  Mostly to 
emphasize that a codex which consists mostly of prose might have a weave
prepared so as to be consumed by another program, as is usual in static or
other site generation.  This would be in "]
literal_348 -> leaf_355
leaf_355  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/out"]
raw_349 -> leaf_356
leaf_356  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", while the various "]
literal_350 -> leaf_357
leaf_357  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/doc"]
raw_351 -> leaf_358
leaf_358  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
weaves are intended for a pre-compilation view of the raw content.
"]
prose_340 -> { raw_359}
{rank=same; raw_359}

raw_359 [label="raw"]


raw_359 -> leaf_360
leaf_360  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Things like RSS feeds, temporal views, tag enhancement, search bars,
anything of that nature. 
"]
prose_341 -> { raw_361 literal_362 raw_363 literal_364 raw_365}
{rank=same; raw_361 literal_362 raw_363 literal_364 raw_365}

raw_361 [label="raw"]

literal_362 [label="literal"]

raw_363 [label="raw"]

literal_364 [label="literal"]

raw_365 [label="raw"]


raw_361 -> leaf_366
leaf_366  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
One may envision a project folder "]
literal_362 -> leaf_367
leaf_367  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/fodder"]
raw_363 -> leaf_368
leaf_368  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" which has only blog posts in it,
which might look like this, where "]
literal_364 -> leaf_369
leaf_369  [color=Gray,shape=rectangle,fontname=Inconsolata,label="."]
raw_365 -> leaf_370
leaf_370  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" indicates a directory has no files:
"]
structure_342 -> { hashline_371}
{rank=same; hashline_371}

hashline_371 [label="hashline"]


hashline_371 -> { hashtag_372}
{rank=same; hashtag_372}

hashtag_372 [label="hashtag"]


hashtag_372 -> leaf_373
leaf_373  [color=Gray,shape=rectangle,fontname=Inconsolata,label=""]
section_343 -> { header_374 prose_375 prose_376 prose_377 prose_378}
{rank=same; header_374 prose_375 prose_376 prose_377 prose_378}

header_374 [label="3 : etc etc"]

prose_375 [label="prose"]

prose_376 [label="prose"]

prose_377 [label="prose"]

prose_378 [label="prose"]


header_374 -> leaf_379
leaf_379  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** etc etc"]
prose_375 -> { raw_380 literal_381 raw_382 literal_383 raw_384 literal_385 raw_386}
{rank=same; raw_380 literal_381 raw_382 literal_383 raw_384 literal_385 raw_386}

raw_380 [label="raw"]

literal_381 [label="literal"]

raw_382 [label="raw"]

literal_383 [label="literal"]

raw_384 [label="raw"]

literal_385 [label="literal"]

raw_386 [label="raw"]


raw_380 -> leaf_387
leaf_387  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  I'd rather you stick to three letters, but don't intend that my tools will
burn your barn and salt your fields if you don't. "]
literal_381 -> leaf_388
leaf_388  [color=Gray,shape=rectangle,fontname=Inconsolata,label="manifest"]
raw_382 -> leaf_389
leaf_389  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and "]
literal_383 -> leaf_390
leaf_390  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge"]
raw_384 -> leaf_391
leaf_391  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" only
need an "]
literal_385 -> leaf_392
leaf_392  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_386 -> leaf_393
leaf_393  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory and will try and step lightly around any weirdly 
structured directories of the other names, but no promises. 
"]
prose_376 -> { raw_394 literal_395 raw_396 literal_397 raw_398 literal_399 raw_400}
{rank=same; raw_394 literal_395 raw_396 literal_397 raw_398 literal_399 raw_400}

raw_394 [label="raw"]

literal_395 [label="literal"]

raw_396 [label="raw"]

literal_397 [label="literal"]

raw_398 [label="raw"]

literal_399 [label="literal"]

raw_400 [label="raw"]


raw_394 -> leaf_401
leaf_401  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The premise is that if you have a few images and icons, they can go directly
into "]
literal_395 -> leaf_402
leaf_402  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/etc"]
raw_396 -> leaf_403
leaf_403  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" or in "]
literal_397 -> leaf_404
leaf_404  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/etc/img"]
raw_398 -> leaf_405
leaf_405  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", as you please, while a codex with a whole work
history of hand-crafted image binaries would want a root-level "]
literal_399 -> leaf_406
leaf_406  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/img"]
raw_400 -> leaf_407
leaf_407  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" 
directory to organize that.
"]
prose_377 -> { raw_408 literal_409 raw_410 literal_411 raw_412 literal_413 raw_414}
{rank=same; raw_408 literal_409 raw_410 literal_411 raw_412 literal_413 raw_414}

raw_408 [label="raw"]

literal_409 [label="literal"]

raw_410 [label="raw"]

literal_411 [label="literal"]

raw_412 [label="raw"]

literal_413 [label="literal"]

raw_414 [label="raw"]


raw_408 -> leaf_415
leaf_415  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
I expect there will be projects for which a top-level "]
literal_409 -> leaf_416
leaf_416  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/bin"]
raw_410 -> leaf_417
leaf_417  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is also
appropriate. "]
literal_411 -> leaf_418
leaf_418  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/tmp"]
raw_412 -> leaf_419
leaf_419  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and "]
literal_413 -> leaf_420
leaf_420  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/log"]
raw_414 -> leaf_421
leaf_421  [color=Gray,shape=rectangle,fontname=Inconsolata,label=", naturally, will show up from time to time. 
"]
prose_378 -> { raw_422}
{rank=same; raw_422}

raw_422 [label="raw"]


raw_422 -> leaf_423
leaf_423  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
I should probably add some kind of dotfile at the root without which the
bettertools will refuse to recursively mangle a filesystem.  Hmm.

"]
section_14 -> { header_424 prose_425 prose_426 prose_427 section_428}
{rank=same; header_424 prose_425 prose_426 prose_427 section_428}

header_424 [label="2 : (assert is-codex?)"]

prose_425 [label="prose"]

prose_426 [label="prose"]

prose_427 [label="prose"]

section_428 [label="section: 256-269"]


header_424 -> leaf_429
leaf_429  [color=Gray,shape=rectangle,fontname=Inconsolata,label="** (assert is-codex?)"]
prose_425 -> { raw_430 literal_431 raw_432 literal_433 raw_434 literal_435 raw_436 literal_437 raw_438 literal_439 raw_440 literal_441 raw_442}
{rank=same; raw_430 literal_431 raw_432 literal_433 raw_434 literal_435 raw_436 literal_437 raw_438 literal_439 raw_440 literal_441 raw_442}

raw_430 [label="raw"]

literal_431 [label="literal"]

raw_432 [label="raw"]

literal_433 [label="literal"]

raw_434 [label="raw"]

literal_435 [label="literal"]

raw_436 [label="raw"]

literal_437 [label="literal"]

raw_438 [label="raw"]

literal_439 [label="literal"]

raw_440 [label="raw"]

literal_441 [label="literal"]

raw_442 [label="raw"]


raw_430 -> leaf_443
leaf_443  [color=Gray,shape=rectangle,fontname=Inconsolata,label="

  If a directory has an "]
literal_431 -> leaf_444
leaf_444  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_432 -> leaf_445
leaf_445  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory, a "]
literal_433 -> leaf_446
leaf_446  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src"]
raw_434 -> leaf_447
leaf_447  [color=Gray,shape=rectangle,fontname=Inconsolata,label="  directory, a "]
literal_435 -> leaf_448
leaf_448  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_436 -> leaf_449
leaf_449  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
directory, and a "]
literal_437 -> leaf_450
leaf_450  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_438 -> leaf_451
leaf_451  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory, and the "]
literal_439 -> leaf_452
leaf_452  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_440 -> leaf_453
leaf_453  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and "]
literal_441 -> leaf_454
leaf_454  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_442 -> leaf_455
leaf_455  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" 
directories are the same entity, my tools will conclude they are in a 
familiar environment and... do things. 
"]
prose_426 -> { raw_456 literal_457 raw_458 literal_459 raw_460 literal_461 raw_462 literal_463 raw_464 literal_465 raw_466}
{rank=same; raw_456 literal_457 raw_458 literal_459 raw_460 literal_461 raw_462 literal_463 raw_464 literal_465 raw_466}

raw_456 [label="raw"]

literal_457 [label="literal"]

raw_458 [label="raw"]

literal_459 [label="literal"]

raw_460 [label="raw"]

literal_461 [label="literal"]

raw_462 [label="raw"]

literal_463 [label="literal"]

raw_464 [label="raw"]

literal_465 [label="literal"]

raw_466 [label="raw"]


raw_456 -> leaf_467
leaf_467  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
There need be no contents.  It's also allowable that both "]
literal_457 -> leaf_468
leaf_468  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_458 -> leaf_469
leaf_469  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and"]
literal_459 -> leaf_470
leaf_470  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_460 -> leaf_471
leaf_471  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" exist provided "]
literal_461 -> leaf_472
leaf_472  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_462 -> leaf_473
leaf_473  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is empty, or even for "]
literal_463 -> leaf_474
leaf_474  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_464 -> leaf_475
leaf_475  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" to be the symlink
to "]
literal_465 -> leaf_476
leaf_476  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_466 -> leaf_477
leaf_477  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".
"]
prose_427 -> { raw_478 literal_479 raw_480 literal_481 raw_482}
{rank=same; raw_478 literal_479 raw_480 literal_481 raw_482}

raw_478 [label="raw"]

literal_479 [label="literal"]

raw_480 [label="raw"]

literal_481 [label="literal"]

raw_482 [label="raw"]


raw_478 -> leaf_483
leaf_483  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
Any other condition, particularly "]
literal_479 -> leaf_484
leaf_484  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_480 -> leaf_485
leaf_485  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" being a literal directory while"]
literal_481 -> leaf_486
leaf_486  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_482 -> leaf_487
leaf_487  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" is a different one with contents, is not a codex. 


"]
section_428 -> { header_488 prose_489 prose_490 prose_491 prose_492}
{rank=same; header_488 prose_489 prose_490 prose_491 prose_492}

header_488 [label="3 : grym files"]

prose_489 [label="prose"]

prose_490 [label="prose"]

prose_491 [label="prose"]

prose_492 [label="prose"]


header_488 -> leaf_493
leaf_493  [color=Gray,shape=rectangle,fontname=Inconsolata,label="*** grym files"]
prose_489 -> { raw_494 literal_495 raw_496 literal_497 raw_498}
{rank=same; raw_494 literal_495 raw_496 literal_497 raw_498}

raw_494 [label="raw"]

literal_495 [label="literal"]

raw_496 [label="raw"]

literal_497 [label="literal"]

raw_498 [label="raw"]


raw_494 -> leaf_499
leaf_499  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
"]
literal_495 -> leaf_500
leaf_500  [color=Gray,shape=rectangle,fontname=Inconsolata,label="bridge"]
raw_496 -> leaf_501
leaf_501  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" shouldn't absolutely require that a codex-compliant directory
involve "]
literal_497 -> leaf_502
leaf_502  [color=Gray,shape=rectangle,fontname=Inconsolata,label="grym"]
raw_498 -> leaf_503
leaf_503  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" in any capacity.  This is still the normal state of affairs.
"]
prose_490 -> { raw_504 literal_505 raw_506 literal_507 raw_508}
{rank=same; raw_504 literal_505 raw_506 literal_507 raw_508}

raw_504 [label="raw"]

literal_505 [label="literal"]

raw_506 [label="raw"]

literal_507 [label="literal"]

raw_508 [label="raw"]


raw_504 -> leaf_509
leaf_509  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
The additional criteria are a "]
literal_505 -> leaf_510
leaf_510  [color=Gray,shape=rectangle,fontname=Inconsolata,label=".grymrc"]
raw_506 -> leaf_511
leaf_511  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" file at the root, and that's it. 
A "]
literal_507 -> leaf_512
leaf_512  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/.grym"]
raw_508 -> leaf_513
leaf_513  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" directory is also reserved. 
"]
prose_491 -> { raw_514 literal_515 raw_516 literal_517 raw_518 literal_519 raw_520}
{rank=same; raw_514 literal_515 raw_516 literal_517 raw_518 literal_519 raw_520}

raw_514 [label="raw"]

literal_515 [label="literal"]

raw_516 [label="raw"]

literal_517 [label="literal"]

raw_518 [label="raw"]

literal_519 [label="literal"]

raw_520 [label="raw"]


raw_514 -> leaf_521
leaf_521  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
These aren't part of the core assertion because I want to support putting 
an existing project in the sorcery drawer, adding an "]
literal_515 -> leaf_522
leaf_522  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/orb"]
raw_516 -> leaf_523
leaf_523  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" and "]
literal_517 -> leaf_524
leaf_524  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/lib"]
raw_518 -> leaf_525
leaf_525  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
and purling a "]
literal_519 -> leaf_526
leaf_526  [color=Gray,shape=rectangle,fontname=Inconsolata,label="/src/lib"]
raw_520 -> leaf_527
leaf_527  [color=Gray,shape=rectangle,fontname=Inconsolata,label=" to please the djinn, and letting that work.
"]
prose_492 -> { raw_528}
{rank=same; raw_528}

raw_528 [label="raw"]


raw_528 -> leaf_529
leaf_529  [color=Gray,shape=rectangle,fontname=Inconsolata,label="
There is no need in such an instance to pretend the sorcery emanates from 
the orb.  It may be enfolded or not, at leisure. "]

}
